"use strict";function shallowCopy(e){return objectBehaviors[objectType(e)].makeShallow(e)}function copyObject(e,t,r=null){if(r=r||objectType(e),!objectBehaviors[r].mayDeepCopy)return;const a=objectBehaviors[r].keyVals(e),o=objectBehaviors[r].addElement;a.forEach(e=>{const{key:r,value:a,descriptor:n}=e,y=objectType(a),l=objectBehaviors[y].mayDeepCopy?objectBehaviors[y].makeEmpty(a):objectBehaviors[y].makeShallow(a);o(t,r,l,n),copyObject(a,l,y)})}function objectType(e){let t;if(isPrimitive(e)||!e instanceof Object)return"primitive";const r=e.constructor&&e.constructor.name&&e.constructor.name.toLowerCase();if("string"==typeof r&&r.length&&objectBehaviors[r])return r;for(const r in objectBehaviors)if(!(t=objectBehaviors[r].type)||e instanceof t)return r;return"unknown"}module.exports=function(e,t=!0){if(!t)return shallowCopy(e);if(!e||isPrimitive(e))return e;const r=objectType(e);if(!objectBehaviors[r].mayDeepCopy)return objectBehaviors[r].makeShallow(e);let a=objectBehaviors[r].makeEmpty(e);return copyObject(e,a,r),a};const objectBehaviors={array:{type:Array,mayDeepCopy:!0,addElement:(e,t,r)=>Array.prototype.push.call(e,r),makeEmpty:e=>{const t=[];return Object.setPrototypeOf(t,Object.getPrototypeOf(e)),t},makeShallow:e=>{const t=[...e];return Object.setPrototypeOf(t,Object.getPrototypeOf(e)),t},keyVals:e=>{let t=[];return e.forEach((e,r)=>{t.push({key:r,value:e})}),t}},date:{type:Date,makeShallow:e=>new Date(e.getTime())},regexp:{type:RegExp,makeShallow:e=>e,keyVals:()=>null},function:{type:Function,makeShallow:e=>e},int8array:{type:Int8Array,makeShallow:e=>Int8Array.from(e)},uint8array:{type:Uint8Array,makeShallow:e=>Uint8Array.from(e)},uint8clampedarray:{type:Uint8ClampedArray,makeShallow:e=>Uint8ClampedArray.from(e)},int16array:{type:Int16Array,makeShallow:e=>Int16Array.from(e)},uint16array:{type:Uint16Array,makeShallow:e=>Uint16Array.from(e)},int32array:{type:Int32Array,makeShallow:e=>Int32Array.from(e)},uint32array:{type:Uint32Array,makeShallow:e=>Uint32Array.from(e)},float32array:{type:Float32Array,makeShallow:e=>Float32Array.from(e)},float64array:{type:Float64Array,makeShallow:e=>Float64Array.from(e)},bigint64array:{type:BigInt64Array,makeShallow:e=>BigInt64Array.from(e)},biguint64array:{type:BigUint64Array,makeShallow:e=>BigUint64Array.from(e)},map:{type:Map,mayDeepCopy:!0,addElement:(e,t,r)=>e.set(t,r),makeEmpty:()=>new Map,makeShallow:e=>new Map(e),keyVals:e=>{let t=[];return e.forEach((r,a)=>{t.push({key:a,value:e.get(a)})}),t}},set:{type:Set,mayDeepCopy:!0,addElement:(e,t,r)=>e.add(r),makeEmpty:()=>new Set,makeShallow:e=>new Set(e),keyVals:e=>{let t=[];return e.forEach(e=>{t.push({key:null,value:e})}),t}},object:{type:Object,mayDeepCopy:!0,addElement:(e,t,r,a=null)=>{Object.defineProperty(e,t,{...a,value:r})},makeEmpty:e=>{const t={};return Object.setPrototypeOf(t,Object.getPrototypeOf(e)),t},makeShallow:e=>{const t=Object.assign({},e);return Object.setPrototypeOf(t,Object.getPrototypeOf(e)),t},keyVals:e=>{let t=[];return Object.getOwnPropertyNames(e).forEach(r=>{const a=Object.getOwnPropertyDescriptor(e,r),o=a.value;t.push({key:r,value:o,descriptor:a})}),t}},unknown:{makeShallow:e=>e},primitive:{makeShallow:e=>e}};function isPrimitive(e){let t=typeof e;return"number"===t||"string"===t||"boolean"===t||"undefined"===t||"bigint"===t||"symbol"===t||null===e}