const objectBehaviors={},isPrimitive=e=>{let t=typeof e;return"number"===t||"string"===t||"boolean"===t||"undefined"===t||"bigint"===t||"symbol"===t||null===e},objectType=e=>{if(isPrimitive(e)||!(e instanceof Object))return"primitive";const t=e.constructor&&e.constructor.name&&e.constructor.name.toLowerCase();if("string"==typeof t&&t.length&&objectBehaviors[t])return t;let a;for(const t in objectBehaviors)if(!(a=objectBehaviors[t].type)||e instanceof a)return t;return"unknown"},arrayAddElement=(e,t,a)=>Array.prototype.push.call(e,a),arrayMakeEmpty=e=>{const t=[];return Object.setPrototypeOf(t,Object.getPrototypeOf(e)),t},arrayMakeShallow=e=>{const t=[...e];return Object.setPrototypeOf(t,Object.getPrototypeOf(e)),t},arrayIterate=(e,t,a)=>{const r=e.length;for(let t=0;t<r;t++){const r=e[t];a({key:t,value:r,type:objectType(r)})}},addArrayBehavior=()=>{Object.assign(objectBehaviors,{array:{type:Array,mayDeepCopy:!0,addElement:arrayAddElement,makeEmpty:arrayMakeEmpty,makeShallow:arrayMakeShallow,iterate:arrayIterate}})},addDateBehavior=()=>{Object.assign(objectBehaviors,{date:{type:Date,makeShallow:e=>new Date(e.getTime())}})},addRegExpBehavior=()=>{Object.assign(objectBehaviors,{regexp:{type:RegExp,makeShallow:e=>new RegExp(e)}})},addFunctionBehavior=()=>{Object.assign(objectBehaviors,{function:{type:Function,makeShallow:e=>e}})},addErrorBehavior=()=>{Object.assign(objectBehaviors,{error:{type:Error,makeShallow:e=>{const t=new Error(e.message);return t.stack=e.stack,t}}})},addTypedArrayBehavior=e=>{let t="undefined"!=typeof global&&global[e]||"undefined"!=typeof window&&window[e]||"undefined"!=typeof WorkerGlobalScope&&WorkerGlobalScope[e];void 0!==t&&(objectBehaviors[e.toLowerCase()]={type:t,makeShallow:e=>t.from(e)})},addAllTypedArrayBehaviors=()=>{["Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array"].forEach(e=>addTypedArrayBehavior(e))},addArrayBufferBehavior=()=>{"undefined"!=typeof ArrayBuffer&&Object.assign(objectBehaviors,{arraybuffer:{type:ArrayBuffer,makeShallow:e=>e.slice(0)}})},addMapBehavior=()=>{"undefined"!=typeof Map&&Object.assign(objectBehaviors,{map:{type:Map,mayDeepCopy:!0,addElement:(e,t,a)=>e.set(t,a),makeEmpty:()=>new Map,makeShallow:e=>new Map(e),iterate:(e,t,a)=>{e.forEach((e,t)=>{const r={key:t,value:e,type:objectType(e)};a(r)})}}})},addSetBehavior=()=>{"undefined"!=typeof Set&&Object.assign(objectBehaviors,{set:{type:Set,mayDeepCopy:!0,addElement:(e,t,a)=>e.add(a),makeEmpty:()=>new Set,makeShallow:e=>new Set(e),iterate:(e,t,a)=>{e.forEach(e=>{const t={key:null,value:e,type:objectType(e)};a(t)})}}})},addWeakSetBehavior=()=>{"undefined"!=typeof WeakSet&&Object.assign(objectBehaviors,{weakset:{type:WeakSet,makeShallow:e=>e}})},addWeakMapBehavior=()=>{"undefined"!=typeof WeakMap&&Object.assign(objectBehaviors,{weakmap:{type:WeakMap,makeShallow:e=>e}})},addBufferBehavior=()=>{"undefined"!=typeof Buffer&&Object.assign(objectBehaviors,{buffer:{type:Buffer,makeShallow:e=>Buffer.from(e)}})},objectAddElement=(e,t,a,r)=>{r?Object.defineProperty(e,t,r):e[t]=a},objectMakeEmpty=e=>{const t={};return Object.setPrototypeOf(t,Object.getPrototypeOf(e)),t},objectMakeShallow=e=>{const t=Object.assign({},e);return Object.setPrototypeOf(t,Object.getPrototypeOf(e)),t},objectIterate=(e,t,a)=>{const r=t?Object.getOwnPropertyNames(e):Object.keys(e),o=r.length;for(let n=0;n<o;n++){const o=r[n],i=e[o],y={key:o,value:i,type:objectType(i)};t&&!e.propertyIsEnumerable(o)&&(y.descriptor=Object.getOwnPropertyDescriptor(e,o)),a(y)}},addObjectBehavior=()=>{Object.assign(objectBehaviors,{object:{type:Object,mayDeepCopy:!0,addElement:objectAddElement,makeEmpty:objectMakeEmpty,makeShallow:objectMakeShallow,iterate:objectIterate}})},addUnknownAndPrimitive=()=>{Object.assign(objectBehaviors,{unknown:{makeShallow:e=>e},primitive:{makeShallow:e=>e}})};function objectActions(e){return objectBehaviors[e]}Object.assign(objectBehaviors,{array:{type:Array,mayDeepCopy:!0,addElement:arrayAddElement,makeEmpty:arrayMakeEmpty,makeShallow:arrayMakeShallow,iterate:arrayIterate}}),Object.assign(objectBehaviors,{date:{type:Date,makeShallow:e=>new Date(e.getTime())}}),Object.assign(objectBehaviors,{regexp:{type:RegExp,makeShallow:e=>new RegExp(e)}}),Object.assign(objectBehaviors,{function:{type:Function,makeShallow:e=>e}}),Object.assign(objectBehaviors,{error:{type:Error,makeShallow:e=>{const t=new Error(e.message);return t.stack=e.stack,t}}}),["Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array"].forEach(e=>addTypedArrayBehavior(e)),"undefined"!=typeof ArrayBuffer&&Object.assign(objectBehaviors,{arraybuffer:{type:ArrayBuffer,makeShallow:e=>e.slice(0)}}),"undefined"!=typeof Map&&Object.assign(objectBehaviors,{map:{type:Map,mayDeepCopy:!0,addElement:(e,t,a)=>e.set(t,a),makeEmpty:()=>new Map,makeShallow:e=>new Map(e),iterate:(e,t,a)=>{e.forEach((e,t)=>{const r={key:t,value:e,type:objectType(e)};a(r)})}}}),"undefined"!=typeof Set&&Object.assign(objectBehaviors,{set:{type:Set,mayDeepCopy:!0,addElement:(e,t,a)=>e.add(a),makeEmpty:()=>new Set,makeShallow:e=>new Set(e),iterate:(e,t,a)=>{e.forEach(e=>{const t={key:null,value:e,type:objectType(e)};a(t)})}}}),"undefined"!=typeof WeakSet&&Object.assign(objectBehaviors,{weakset:{type:WeakSet,makeShallow:e=>e}}),"undefined"!=typeof WeakMap&&Object.assign(objectBehaviors,{weakmap:{type:WeakMap,makeShallow:e=>e}}),"undefined"!=typeof Buffer&&Object.assign(objectBehaviors,{buffer:{type:Buffer,makeShallow:e=>Buffer.from(e)}}),Object.assign(objectBehaviors,{object:{type:Object,mayDeepCopy:!0,addElement:objectAddElement,makeEmpty:objectMakeEmpty,makeShallow:objectMakeShallow,iterate:objectIterate}}),Object.assign(objectBehaviors,{unknown:{makeShallow:e=>e},primitive:{makeShallow:e=>e}}),module.exports=[isPrimitive,objectType,objectActions];